{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","displayName","language","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","height","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","javascript","setJavascript","srcDoc","setSrcDoc","console","log","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAiCeA,EAzBA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAK9C,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BJ,IAC/B,cAAC,aAAD,CACEK,eARe,SAACC,EAAQC,EAAML,GAClCC,EAASD,IAQLA,MAAOA,EACPE,UAAU,sBACVI,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMV,EACNW,aAAa,EACbC,MAAO,WACPC,OAAQ,cCAHC,EAtBS,SAACC,EAAKC,GAC5B,IAAMC,EAHO,uBAGgBF,EADgB,EAGnBG,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQJ,GAEvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAXkC,mBAGtCf,EAHsC,KAG/BuB,EAH+B,KAmB7C,OAJAC,qBAAU,WACRL,aAAaM,QAAQT,EAAaK,KAAKK,UAAU1B,MAChD,CAACA,EAAOgB,IAEJ,CAAChB,EAAOuB,ICiDFI,EAtDH,WAAO,IAAD,EACQd,EAAgB,OAfzB,+EAcC,mBACTe,EADS,KACHC,EADG,OAEMhB,EAAgB,MAZxB,8EAUE,mBAETiB,EAFS,KAEJC,EAFI,OAGoBlB,EAClC,aANmB,qDAEL,mBAGTmB,EAHS,KAGGC,EAHH,OAOYhB,mBAAS,IAPrB,mBAOTiB,EAPS,KAODC,EAPC,KAwBhB,OAfAC,QAAQC,IAAIT,GACZJ,qBAAU,WACR,IAAMc,EAAUC,YAAW,WACzBJ,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,sCAOR,KAEH,OAAO,kBAAMQ,aAAaF,MACzB,CAACV,EAAME,EAAKE,IAGb,sBAAK9B,UAAU,iBAAf,UACE,cAAC,EAAD,CACEH,SAAS,MACTD,YAAY,OACZE,MAAO4B,EACP3B,SAAU4B,IAEZ,cAAC,EAAD,CAAQ9B,SAAS,MAAMD,YAAY,MAAME,MAAO8B,EAAK7B,SAAU8B,IAC/D,cAAC,EAAD,CACEhC,SAAS,aACTD,YAAY,KACZE,MAAOgC,EACP/B,SAAUgC,IAGZ,qBAAK/B,UAAU,oCAAf,SACE,wBACEgC,OAAQA,EACRO,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNhC,OAAO,eC5DjBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28037c26.chunk.js","sourcesContent":["import React from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/css/css'\nimport 'codemirror/mode/javascript/javascript'\nimport { Controlled } from 'react-codemirror2'\n\nconst Editor = ({ displayName, language, value, onChange }) => {\n  const handleChange = (editor, data, value) => {\n    onChange(value)\n  }\n\n  return (\n    <div className='editor-container'>\n      <div className='editor-title'>{displayName}</div>\n      <Controlled\n        onBeforeChange={handleChange}\n        value={value}\n        className='code-mirror-wrapper'\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n          theme: 'material',\n          height: '100%',\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Editor\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'CleanCodePlayground-'\n\nconst useLocalStorage = (key, initialValue) => {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [value, prefixedKey])\n\n  return [value, setValue]\n}\n\nexport default useLocalStorage\n","import React, { useState, useEffect } from 'react'\nimport Editor from './Editor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst defaultHtml = `<h1>This is a code playground</h1>\n\n<p>Type some code to get started.</p>`\n\nconst defaultCss = `body {\n  padding: 10px 25px;\n}\n\nh1, p {\n  font-family: sans-serif;\n}`\n\nconst defaultJavascript = `document.body.style.backgroundColor = 'lightblue'`\n\nconst App = () => {\n  const [html, setHtml] = useLocalStorage('html', defaultHtml)\n  const [css, setCss] = useLocalStorage('css', defaultCss)\n  const [javascript, setJavascript] = useLocalStorage(\n    'javascript',\n    defaultJavascript\n  )\n  const [srcDoc, setSrcDoc] = useState('')\n\n  console.log(html)\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${javascript}</script>\n      </html>\n    `)\n    }, 500)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, javascript])\n\n  return (\n    <div className='grid-container'>\n      <Editor\n        language='xml'\n        displayName='HTML'\n        value={html}\n        onChange={setHtml}\n      />\n      <Editor language='css' displayName='CSS' value={css} onChange={setCss} />\n      <Editor\n        language='javascript'\n        displayName='JS'\n        value={javascript}\n        onChange={setJavascript}\n      />\n\n      <div className='editor-container result-container'>\n        <iframe\n          srcDoc={srcDoc}\n          title='output'\n          sandbox='allow-scripts'\n          frameBorder='0'\n          width='100%'\n          height='100%'\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}